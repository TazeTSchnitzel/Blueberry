0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish',
1 verbose cli   './' ]
2 info using npm@1.4.28
3 info using node@v0.10.33
4 verbose node symlink C:\Program Files\nodejs\\node.exe
5 verbose publish [ './' ]
6 verbose cache add [ './', null ]
7 verbose cache add name=undefined spec="./" args=["./",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: './',
8 verbose parsed url   path: './',
8 verbose parsed url   href: './' }
9 silly lockFile 0ee6c175- ./
10 verbose lock ./ C:\Users\Federico\AppData\Roaming\npm-cache\0ee6c175-.lock
11 verbose tar pack [ 'C:\\Users\\Federico\\AppData\\Roaming\\npm-cache\\blueberry\\0.5.0\\package.tgz',
11 verbose tar pack   './' ]
12 verbose tarball C:\Users\Federico\AppData\Roaming\npm-cache\blueberry\0.5.0\package.tgz
13 verbose folder ./
14 info prepublish blueberry@0.5.0
15 silly lockFile 04cb2bca-tar tar://./
16 verbose lock tar://./ C:\Users\Federico\AppData\Roaming\npm-cache\04cb2bca-tar.lock
17 silly lockFile 3235909a-ache-blueberry-0-5-0-package-tgz tar://C:\Users\Federico\AppData\Roaming\npm-cache\blueberry\0.5.0\package.tgz
18 verbose lock tar://C:\Users\Federico\AppData\Roaming\npm-cache\blueberry\0.5.0\package.tgz C:\Users\Federico\AppData\Roaming\npm-cache\3235909a-ache-blueberry-0-5-0-package-tgz.lock
19 silly lockFile 04cb2bca-tar tar://./
20 silly lockFile 04cb2bca-tar tar://./
21 silly lockFile 3235909a-ache-blueberry-0-5-0-package-tgz tar://C:\Users\Federico\AppData\Roaming\npm-cache\blueberry\0.5.0\package.tgz
22 silly lockFile 3235909a-ache-blueberry-0-5-0-package-tgz tar://C:\Users\Federico\AppData\Roaming\npm-cache\blueberry\0.5.0\package.tgz
23 silly lockFile f89e88a3-pm-cache-blueberry-0-5-0-package C:\Users\Federico\AppData\Roaming\npm-cache\blueberry\0.5.0\package
24 verbose lock C:\Users\Federico\AppData\Roaming\npm-cache\blueberry\0.5.0\package C:\Users\Federico\AppData\Roaming\npm-cache\f89e88a3-pm-cache-blueberry-0-5-0-package.lock
25 silly lockFile f89e88a3-pm-cache-blueberry-0-5-0-package C:\Users\Federico\AppData\Roaming\npm-cache\blueberry\0.5.0\package
26 silly lockFile f89e88a3-pm-cache-blueberry-0-5-0-package C:\Users\Federico\AppData\Roaming\npm-cache\blueberry\0.5.0\package
27 silly lockFile 0ee6c175- ./
28 silly lockFile 0ee6c175- ./
29 silly publish { name: 'blueberry',
29 silly publish   version: '0.5.0',
29 silly publish   description: 'A ruby-ish programming language which compiles to PHP',
29 silly publish   author: { name: 'Federico Ramírez', email: 'fedra.arg@gmail.com' },
29 silly publish   dependencies: { chokidar: '0.x.x', mkpath: '0.x.x' },
29 silly publish   devDependencies: { nodeunit: '0.x.x', glob: '4.x.x' },
29 silly publish   preferGlobal: 'true',
29 silly publish   bin: { bb: 'bin/bb' },
29 silly publish   contributors:
29 silly publish    [ { name: 'Federico Ramírez',
29 silly publish        email: 'fedra.arg@gmail.com',
29 silly publish        url: 'http://gosukiwi-blog.tumblr.com' } ],
29 silly publish   readme: '# Blueberry\r\nBlueberry is a script language with clean syntax, inspired from CoffeeScript, \r\nPython and Ruby.\r\n\r\nBlueberry compiles to __PHP__ so everything you do with Blueberry can run wherever\r\nPHP can run, this is awesome for shared web servers where you can only run\r\ndefault PHP.\r\n\r\nRight now Blueberry is still in very early development, it\'s usage is encouraged\r\nmostly for testing purposes.\r\n\r\n## Building\r\n\r\nAll the compiler dependencies can be installed with `npm install`.\r\n\r\nBuilding the grammar, which you don\'t need to do unless you modify it, can be done with `pegjs --cache src/grammar.g src/grammar.js`. You\'ll need to install pegjs first, version 0.7 or later, e.g. `npm install -g pegjs`.\r\n\r\n## Command Line Usage\r\n\r\nThe easiest way to compile Blueberry code into PHP code is using the \r\n```bb``` file, inside the ```bin``` directory. \r\n\r\n```bin/bb compile file.bb```\r\n\r\nIf using unix you can just symlink the executable to your ```/bin``` folder, \r\nif windows, add the path to ```bb.bat``` to your PATH env variable.\r\n\r\nSee the [wiki](https://github.com/gosukiwi/Blueberry/wiki) for extensive documentation on the CLI (Command Line Interface)\r\n\r\n## Syntax At A Glance\r\n\r\n```\r\n<?bb\r\n/* \r\n I\'m a multiline comment\r\n*/\r\n\r\n# variable definition\r\nfoo = 1 \r\nbar = "baz"\r\n\r\n# You can use JSON syntax to define associative arrays\r\narr = { "name": "Mike", "age": 18, "meta": { "items": [1, 2, 3] } }\r\n\r\n# Compiles to strict comparison `$a === 1`\r\nif a == 1\r\n  echo("Hello, World!")\r\nend\r\n\r\nfor i in (0..10)\r\n  echo(i)\r\nend\r\n\r\n# List comprehensions\r\nmyList = [2 * i for i in (1..10) where i % 2 == 0]\r\n# It also works in JSON constructs\r\nmyArr  = { "first_names": [name.first_name for name in names] }\r\n\r\n# Closures can be used as follows\r\nfoo = (arg1, arg2) -> arg1 + arg2\r\nbar = () -> do\r\n  name = "Tolouse"\r\n  return name\r\nend\r\n# Execute function\r\nbar()\r\n\r\nclass MyClass < MyParentClass\r\n  @name\r\n\r\n  def greet\r\n    echo("Hello! My name is " & @name)\r\n  end\r\nend\r\n?>\r\n```\r\n\r\nFor more information, see the [wiki](https://github.com/gosukiwi/Blueberry/wiki).\r\n\r\n# Versioning\r\nFormat: ```<major>.<minor>.<patch>```\r\n\r\nBreaking backwards compatibility bumps the major\r\n\r\nNew additions without breaking backwards compatibility bumps the minor\r\n\r\nBug fixes and misc changes bump the patch\r\n',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: '53a0126fc7840ecbf25f9620adc40c0b67755242',
29 silly publish   _id: 'blueberry@0.5.0',
29 silly publish   scripts: {},
29 silly publish   _shasum: '7e65e823b14985eefc17ab1e304130eb2ce6b321',
29 silly publish   _from: './' }
30 verbose request where is /blueberry
31 verbose request registry https://registry.npmjs.org/
32 verbose request id e002d9c793c27067
33 verbose url raw /blueberry
34 verbose url resolving [ 'https://registry.npmjs.org/', './blueberry' ]
35 verbose url resolved https://registry.npmjs.org/blueberry
36 verbose request where is https://registry.npmjs.org/blueberry
37 info trying registry request attempt 1 at 02:36:46
38 http PUT https://registry.npmjs.org/blueberry
39 http 403 https://registry.npmjs.org/blueberry
40 verbose headers { date: 'Sun, 11 Jan 2015 05:36:56 GMT',
40 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
40 verbose headers   'content-type': 'application/json',
40 verbose headers   'cache-control': 'max-age=60',
40 verbose headers   'content-length': '5534',
40 verbose headers   'accept-ranges': 'bytes',
40 verbose headers   via: '1.1 varnish',
40 verbose headers   'x-served-by': 'cache-atl6235-ATL',
40 verbose headers   'x-cache': 'MISS',
40 verbose headers   'x-cache-hits': '0',
40 verbose headers   'x-timer': 'S1420954615.833957,VS0,VE346',
40 verbose headers   'keep-alive': 'timeout=10, max=50',
40 verbose headers   connection: 'Keep-Alive' }
41 error publish Failed PUT 403
42 error Error: forbidden cannot modify pre-existing version: 0.5.0
42 error old={"name":"blueberry","version":"0.5.0","description":"A ruby-ish programming language which compiles to PHP","author":{"name":"Federico Ramírez","email":"fedra.arg@gmail.com"},"dependencies":{"chokidar":"0.x.x","mkpath":"0.x.x"},"devDependencies":{"nodeunit":"0.x.x","glob":"4.x.x"},"preferGlobal":"true","bin":{"bb":"bin/bb"},"contributors":[{"name":"Federico Ramírez","email":"fedra.arg@gmail.com","url":"http://gosukiwi-blog.tumblr.com"}],"gitHead":"bd3f4aa718f7bc7472285445d3fa770f4eef22a9","_id":"blueberry@0.5.0","scripts":{},"_shasum":"7e65e823b14985eefc17ab1e304130eb2ce6b321","_from":"./","_npmVersion":"1.4.28","_npmUser":{"name":"gosukiwi","email":"fedra.arg@gmail.com"},"maintainers":[{"name":"gosukiwi","email":"fedra.arg@gmail.com"}],"dist":{"shasum":"7e65e823b14985eefc17ab1e304130eb2ce6b321","tarball":"http://registry.npmjs.org/blueberry/-/blueberry-0.5.0.tgz"}}
42 error new={"name":"blueberry","version":"0.5.0","description":"A ruby-ish programming language which compiles to PHP","author":{"name":"Federico Ramírez","email":"fedra.arg@gmail.com"},"dependencies":{"chokidar":"0.x.x","mkpath":"0.x.x"},"devDependencies":{"nodeunit":"0.x.x","glob":"4.x.x"},"preferGlobal":"true","bin":{"bb":"bin/bb"},"contributors":[{"name":"Federico Ramírez","email":"fedra.arg@gmail.com","url":"http://gosukiwi-blog.tumblr.com"}],"readme":"# Blueberry\u000d\u000aBlueberry is a script language with clean syntax, inspired from CoffeeScript, \u000d\u000aPython and Ruby.\u000d\u000a\u000d\u000aBlueberry compiles to __PHP__ so everything you do with Blueberry can run wherever\u000d\u000aPHP can run, this is awesome for shared web servers where you can only run\u000d\u000adefault PHP.\u000d\u000a\u000d\u000aRight now Blueberry is still in very early development, it's usage is encouraged\u000d\u000amostly for testing purposes.\u000d\u000a\u000d\u000a## Building\u000d\u000a\u000d\u000aAll the compiler dependencies can be installed with `npm install`.\u000d\u000a\u000d\u000aBuilding the grammar, which you don't need to do unless you modify it, can be done with `pegjs --cache src/grammar.g src/grammar.js`. You'll need to install pegjs first, version 0.7 or later, e.g. `npm install -g pegjs`.\u000d\u000a\u000d\u000a## Command Line Usage\u000d\u000a\u000d\u000aThe easiest way to compile Blueberry code into PHP code is using the \u000d\u000a```bb``` file, inside the ```bin``` directory. \u000d\u000a\u000d\u000a```bin/bb compile file.bb```\u000d\u000a\u000d\u000aIf using unix you can just symlink the executable to your ```/bin``` folder, \u000d\u000aif windows, add the path to ```bb.bat``` to your PATH env variable.\u000d\u000a\u000d\u000aSee the [wiki](https://github.com/gosukiwi/Blueberry/wiki) for extensive documentation on the CLI (Command Line Interface)\u000d\u000a\u000d\u000a## Syntax At A Glance\u000d\u000a\u000d\u000a```\u000d\u000a<?bb\u000d\u000a/* \u000d\u000a I'm a multiline comment\u000d\u000a*/\u000d\u000a\u000d\u000a# variable definition\u000d\u000afoo = 1 \u000d\u000abar = \"baz\"\u000d\u000a\u000d\u000a# You can use JSON syntax to define associative arrays\u000d\u000aarr = { \"name\": \"Mike\", \"age\": 18, \"meta\": { \"items\": [1, 2, 3] } }\u000d\u000a\u000d\u000a# Compiles to strict comparison `$a === 1`\u000d\u000aif a == 1\u000d\u000a  echo(\"Hello, World!\")\u000d\u000aend\u000d\u000a\u000d\u000afor i in (0..10)\u000d\u000a  echo(i)\u000d\u000aend\u000d\u000a\u000d\u000a# List comprehensions\u000d\u000amyList = [2 * i for i in (1..10) where i % 2 == 0]\u000d\u000a# It also works in JSON constructs\u000d\u000amyArr  = { \"first_names\": [name.first_name for name in names] }\u000d\u000a\u000d\u000a# Closures can be used as follows\u000d\u000afoo = (arg1, arg2) -> arg1 + arg2\u000d\u000abar = () -> do\u000d\u000a  name = \"Tolouse\"\u000d\u000a  return name\u000d\u000aend\u000d\u000a# Execute function\u000d\u000abar()\u000d\u000a\u000d\u000aclass MyClass < MyParentClass\u000d\u000a  @name\u000d\u000a\u000d\u000a  def greet\u000d\u000a    echo(\"Hello! My name is \" & @name)\u000d\u000a  end\u000d\u000aend\u000d\u000a?>\u000d\u000a```\u000d\u000a\u000d\u000aFor more information, see the [wiki](https://github.com/gosukiwi/Blueberry/wiki).\u000d\u000a\u000d\u000a# Versioning\u000d\u000aFormat: ```<major>.<minor>.<patch>```\u000d\u000a\u000d\u000aBreaking backwards compatibility bumps the major\u000d\u000a\u000d\u000aNew additions without breaking backwards compatibility bumps the minor\u000d\u000a\u000d\u000aBug fixes and misc changes bump the patch\u000d\u000a","readmeFilename":"README.md","gitHead":"53a0126fc7840ecbf25f9620adc40c0b67755242","_id":"blueberry@0.5.0","scripts":{},"_shasum":"7e65e823b14985eefc17ab1e304130eb2ce6b321","_from":"./","_npmVersion":"1.4.28","_npmUser":{"name":"gosukiwi","email":"fedra.arg@gmail.com"},"maintainers":[{"name":"gosukiwi","email":"fedra.arg@gmail.com"}],"dist":{"shasum":"7e65e823b14985eefc17ab1e304130eb2ce6b321","tarball":"http://registry.npmjs.org/blueberry/-/blueberry-0.5.0.tgz"}}: blueberry
42 error     at RegClient.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:308:14)
42 error     at Request._callback (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:246:65)
42 error     at Request.self.callback (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:236:22)
42 error     at Request.emit (events.js:98:17)
42 error     at Request.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1142:14)
42 error     at Request.emit (events.js:117:20)
42 error     at IncomingMessage.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1096:12)
42 error     at IncomingMessage.emit (events.js:117:20)
42 error     at _stream_readable.js:943:16
42 error     at process._tickCallback (node.js:419:13)
43 error If you need help, you may report this *entire* log,
43 error including the npm and node versions, at:
43 error     <http://github.com/npm/npm/issues>
44 error System Windows_NT 6.2.9200
45 error command "C:\\Program Files\\nodejs\\\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish" "./"
46 error cwd C:\Users\Federico\Workspace\node\Blueberry
47 error node -v v0.10.33
48 error npm -v 1.4.28
49 verbose exit [ 1, true ]
